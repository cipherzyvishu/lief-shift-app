import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Auth0Provider } from "@auth0/nextjs-auth0";
import { auth0 } from "~/lib/auth0";
import { ShiftProvider } from "@/context/ShiftContext";
import '@ant-design/v5-patch-for-react-19';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  let session = null;
  try {
    session = await auth0.getSession();
  } catch (error) {
    console.error('Session error in layout:', error);
    // Continue with null session - Auth0Provider will handle login redirect
  }

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Auth0Provider user={session?.user}>
          <ShiftProvider>
            {children}
          </ShiftProvider>
        </Auth0Provider>
      </body>
    </html>
  );
}
